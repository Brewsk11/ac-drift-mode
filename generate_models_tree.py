#!/usr/bin/env python

import os

MODELS_DIR = "lua_libs/drift-mode/models"


def visit_dir(dir_path: str) -> None:
    entries = []

    with os.scandir(dir_path) as it:
        for obj in it:
            if obj.is_dir():
                # Recurse first
                visit_dir(obj.path)

                # Build the require path (no .lua)
                rel = os.path.relpath(obj.path, MODELS_DIR).replace("\\", "/")
                require_path = rel.replace("/", ".")
                entries.append((obj.name, require_path, True))

            elif obj.is_file():
                if obj.name == "init.lua":
                    continue  # skip existing init.lua

                # Strip the .lua extension from the relative path
                rel = os.path.relpath(obj.path, MODELS_DIR).replace("\\", "/")
                rel_no_ext, _ = os.path.splitext(rel)
                require_path = rel_no_ext.replace("/", ".")

                name, _ = os.path.splitext(obj.name)
                entries.append((name, require_path, False))

    # Write the init.lua for this directory
    init_path = os.path.join(dir_path, "init.lua")
    dir_name = dir_path.replace("\\", "/").split("/")[-1]
    with open(init_path, "w", encoding="utf-8") as f:
        f.write("-- This file is autogenerated by generate_models_tree.py\n")
        f.write("-- Do not edit manually\n")
        f.write("\n")
        f.write(f"local {dir_name} = {{\n")
        if len(entries) > 0:
            entry_max_lenght = max([x[0] for x in entries], key=lambda x: len(x))
            max_entry_lenght = len(entry_max_lenght)
            for name, req, is_dir in entries:
                space_count = max_entry_lenght - len(name)
                spaces = space_count * " "
                f.write(
                    f"    {name}{spaces} = require('drift-mode.models.{req}{'.init' if is_dir else ''}'),\n"
                )
        f.write("}\n\n")
        f.write(f"return {dir_name}\n")


# Start from the topâ€‘level models directory
if __name__ == "__main__":
    visit_dir(MODELS_DIR)
